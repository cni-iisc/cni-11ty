export default TextEditor;
type TextEditor = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<Props & Record<string, any>>): void;
};
/** A rich text editor based on Lexical. */
declare const TextEditor: import("svelte").Component<{
    /**
     * - Input value.
     */
    value?: string | undefined;
    /**
     * - Make the text input container flexible.
     */
    flex?: boolean | undefined;
    /**
     * - Enabled modes.
     */
    modes?: import("../../typedefs").TextEditorMode[] | undefined;
    /**
     * - Enabled buttons.
     */
    buttons?: (import("../../typedefs").TextEditorBlockType | import("../../typedefs").TextEditorInlineType)[] | undefined;
    /**
     * - Editor components.
     */
    components?: import("../../typedefs").TextEditorComponent[] | undefined;
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to hide the widget.
     */
    hidden?: boolean | undefined;
    /**
     * - Whether to disable the widget. An alias of the `aria-disabled`
     * attribute.
     */
    disabled?: boolean | undefined;
    /**
     * - Whether to make the widget read-only. An alias of the
     * `aria-readonly` attribute.
     */
    readonly?: boolean | undefined;
    /**
     * - Whether to mark the widget required. An alias of the
     * `aria-required` attribute.
     */
    required?: boolean | undefined;
    /**
     * - Whether to mark the widget invalid. An alias of the
     * `aria-invalid` attribute.
     */
    invalid?: boolean | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
} & Record<string, any>, {}, "value">;
type Props = {
    /**
     * - Input value.
     */
    value?: string | undefined;
    /**
     * - Make the text input container flexible.
     */
    flex?: boolean | undefined;
    /**
     * - Enabled modes.
     */
    modes?: import("../../typedefs").TextEditorMode[] | undefined;
    /**
     * - Enabled buttons.
     */
    buttons?: (import("../../typedefs").TextEditorBlockType | import("../../typedefs").TextEditorInlineType)[] | undefined;
    /**
     * - Editor components.
     */
    components?: import("../../typedefs").TextEditorComponent[] | undefined;
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to hide the widget.
     */
    hidden?: boolean | undefined;
    /**
     * - Whether to disable the widget. An alias of the `aria-disabled`
     * attribute.
     */
    disabled?: boolean | undefined;
    /**
     * - Whether to make the widget read-only. An alias of the
     * `aria-readonly` attribute.
     */
    readonly?: boolean | undefined;
    /**
     * - Whether to mark the widget required. An alias of the
     * `aria-required` attribute.
     */
    required?: boolean | undefined;
    /**
     * - Whether to mark the widget invalid. An alias of the
     * `aria-invalid` attribute.
     */
    invalid?: boolean | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
};
