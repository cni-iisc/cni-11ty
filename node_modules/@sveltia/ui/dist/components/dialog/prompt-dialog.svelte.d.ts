export default PromptDialog;
type PromptDialog = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<ModalProps & DialogProps & KeyboardEventHandlers & MouseEventHandlers & FocusEventHandlers & DragEventHandlers & InputEventHandlers & Props & Record<string, any>>): void;
};
/**
 * A modal prompt dialog. It shows the OK and Cancel buttons as well as a textbox, just like
 * `window.prompt()`.
 * @see https://w3c.github.io/aria/#alertdialog
 * @see https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt
 */
declare const PromptDialog: import("svelte").Component<import("../../typedefs").ModalProps & import("../../typedefs").DialogProps & import("../../typedefs").KeyboardEventHandlers & import("../../typedefs").MouseEventHandlers & import("../../typedefs").FocusEventHandlers & import("../../typedefs").DragEventHandlers & import("../../typedefs").InputEventHandlers & {
    /**
     * - Value entered on the textbox.
     */
    value?: string | undefined;
    /**
     * - Extra attributes for the `<TextInput>`.
     */
    textboxAttrs?: object | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Input slot content.
     */
    input?: import("svelte").Snippet<[]> | undefined;
} & Record<string, any>, {}, "value" | "open">;
type Props = {
    /**
     * - Value entered on the textbox.
     */
    value?: string | undefined;
    /**
     * - Extra attributes for the `<TextInput>`.
     */
    textboxAttrs?: object | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Input slot content.
     */
    input?: import("svelte").Snippet<[]> | undefined;
};
