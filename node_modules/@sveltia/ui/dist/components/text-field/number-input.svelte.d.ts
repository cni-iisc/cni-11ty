export default NumberInput;
type NumberInput = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<TextInputProps & KeyboardEventHandlers & MouseEventHandlers & FocusEventHandlers & DragEventHandlers & InputEventHandlers & Props & Record<string, any>>): void;
};
/**
 * The equivalent of the HTML `<input type="number">` element.
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number
 * @see https://w3c.github.io/aria/#textbox
 */
declare const NumberInput: import("svelte").Component<import("../../typedefs").TextInputProps & import("../../typedefs").KeyboardEventHandlers & import("../../typedefs").MouseEventHandlers & import("../../typedefs").FocusEventHandlers & import("../../typedefs").DragEventHandlers & import("../../typedefs").InputEventHandlers & {
    /**
     * - Input value.
     */
    value?: number | undefined;
    /**
     * - Minimum allowed value.
     */
    min?: number | undefined;
    /**
     * - Maximum allowed value.
     */
    max?: number | undefined;
    /**
     * - Value to be added or removed when using the up/down arrow key or
     * button.
     */
    step?: number | undefined;
    /**
     * - Increase icon slot content.
     */
    increaseIcon?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Decrease icon slot content.
     */
    decreaseIcon?: import("svelte").Snippet<[]> | undefined;
} & Record<string, any>, {}, "invalid" | "value">;
type Props = {
    /**
     * - Input value.
     */
    value?: number | undefined;
    /**
     * - Minimum allowed value.
     */
    min?: number | undefined;
    /**
     * - Maximum allowed value.
     */
    max?: number | undefined;
    /**
     * - Value to be added or removed when using the up/down arrow key or
     * button.
     */
    step?: number | undefined;
    /**
     * - Increase icon slot content.
     */
    increaseIcon?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Decrease icon slot content.
     */
    decreaseIcon?: import("svelte").Snippet<[]> | undefined;
};
