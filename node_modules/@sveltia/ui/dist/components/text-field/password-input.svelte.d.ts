export default PasswordInput;
type PasswordInput = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<TextInputProps & KeyboardEventHandlers & MouseEventHandlers & FocusEventHandlers & DragEventHandlers & InputEventHandlers & Props & Record<string, any>>): void;
};
/**
 * The equivalent of the HTML `<input type="password">` element, but it comes with the Show/Hide
 * button.
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/password
 * @see https://w3c.github.io/aria/#textbox
 */
declare const PasswordInput: import("svelte").Component<import("../../typedefs").TextInputProps & import("../../typedefs").KeyboardEventHandlers & import("../../typedefs").MouseEventHandlers & import("../../typedefs").FocusEventHandlers & import("../../typedefs").DragEventHandlers & import("../../typedefs").InputEventHandlers & {
    /**
     * - Input value.
     */
    value?: string | undefined;
    /**
     * - Visibility icon slot content.
     */
    visibilityIcon?: import("svelte").Snippet<[]> | undefined;
} & Record<string, any>, {}, "value">;
type Props = {
    /**
     * - Input value.
     */
    value?: string | undefined;
    /**
     * - Visibility icon slot content.
     */
    visibilityIcon?: import("svelte").Snippet<[]> | undefined;
};
