export default GridRow;
type GridRow = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<Props & Record<string, any>>): void;
};
/**
 * The interactive version of `<TableRow>`.
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr
 * @see https://w3c.github.io/aria/#row
 */
declare const GridRow: import("svelte").Component<{
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to select the widget. An alias of the `aria-selected`
     * attribute.
     */
    selected?: boolean | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Custom `Change` event handler.
     */
    onChange?: ((event: CustomEvent) => void) | undefined;
    /**
     * - Custom `Select` event handler.
     */
    onSelect?: ((event: CustomEvent) => void) | undefined;
} & Record<string, any>, {}, "">;
type Props = {
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to select the widget. An alias of the `aria-selected`
     * attribute.
     */
    selected?: boolean | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Custom `Change` event handler.
     */
    onChange?: ((event: CustomEvent) => void) | undefined;
    /**
     * - Custom `Select` event handler.
     */
    onSelect?: ((event: CustomEvent) => void) | undefined;
};
