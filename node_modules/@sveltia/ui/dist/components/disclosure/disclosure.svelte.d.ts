export default Disclosure;
type Disclosure = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<Props & Record<string, any>>): void;
};
/**
 * A disclosure (expander) widget. The equivalent of the HTML `<details>` element.
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details
 * @see https://www.w3.org/WAI/ARIA/apg/patterns/disclosure/
 */
declare const Disclosure: import("svelte").Component<{
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to hide the widget. An alias of the `aria-hidden`
     * attribute.
     */
    hidden?: boolean | undefined;
    /**
     * - Whether to disable the widget. An alias of the `aria-disabled`
     * attribute.
     */
    disabled?: boolean | undefined;
    /**
     * - Whether to show the content. An alias of the `aria-expanded`
     * attribute.
     */
    expanded?: boolean | undefined;
    /**
     * - Text label displayed next to the expander.
     */
    label?: string | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Chevron slot content.
     */
    chevronIcon?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Custom `Change` event handler.
     */
    onChange?: ((event: CustomEvent) => void) | undefined;
} & Record<string, any>, {}, "expanded">;
type Props = {
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to hide the widget. An alias of the `aria-hidden`
     * attribute.
     */
    hidden?: boolean | undefined;
    /**
     * - Whether to disable the widget. An alias of the `aria-disabled`
     * attribute.
     */
    disabled?: boolean | undefined;
    /**
     * - Whether to show the content. An alias of the `aria-expanded`
     * attribute.
     */
    expanded?: boolean | undefined;
    /**
     * - Text label displayed next to the expander.
     */
    label?: string | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Chevron slot content.
     */
    chevronIcon?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Custom `Change` event handler.
     */
    onChange?: ((event: CustomEvent) => void) | undefined;
};
