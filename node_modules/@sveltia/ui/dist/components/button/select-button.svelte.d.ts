export default SelectButton;
type SelectButton = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<ButtonProps & KeyboardEventHandlers & MouseEventHandlers & FocusEventHandlers & DragEventHandlers & Props & Record<string, any>>): void;
};
/**
 * A variant of `<Radio>`, looking like a normal button.
 * @see https://w3c.github.io/aria/#radio
 * @see https://www.w3.org/WAI/ARIA/apg/patterns/radio/
 */
declare const SelectButton: import("svelte").Component<import("../../typedefs").ButtonProps & import("../../typedefs").KeyboardEventHandlers & import("../../typedefs").MouseEventHandlers & import("../../typedefs").FocusEventHandlers & import("../../typedefs").DragEventHandlers & {
    /**
     * - Whether to select the widget. An alias of the `aria-checked`
     * attribute. Because the UI is a button, we expose `selected` instead of `checked`.
     */
    selected?: boolean | undefined;
} & Record<string, any>, {}, "selected">;
type Props = {
    /**
     * - Whether to select the widget. An alias of the `aria-checked`
     * attribute. Because the UI is a button, we expose `selected` instead of `checked`.
     */
    selected?: boolean | undefined;
};
