export default SplitButton;
type SplitButton = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<ButtonProps & KeyboardEventHandlers & MouseEventHandlers & FocusEventHandlers & DragEventHandlers & Props & Record<string, any>>): void;
};
/**
 * A combination of a normal `<Button>` (default action) and an arrow-only `<MenuButton>` (different
 * actions). For example, Microsoft Word has the Paste button along with the Keep Source Formatting,
 * Match Formatting and Keep Text Only options.
 * @see https://www.google.com/search?q=split+button&tbm=isch
 */
declare const SplitButton: import("svelte").Component<import("../../typedefs").ButtonProps & import("../../typedefs").KeyboardEventHandlers & import("../../typedefs").MouseEventHandlers & import("../../typedefs").FocusEventHandlers & import("../../typedefs").DragEventHandlers & {
    /**
     * - Where to show the dropdown
     * menu.
     */
    popupPosition?: import("../../typedefs").PopupPosition | undefined;
    /**
     * - Whether to show the backdrop for the popup.
     */
    showPopupBackdrop?: boolean | undefined;
    /**
     * - Chevron slot content.
     */
    chevronIcon?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Popup slot content.
     */
    popup?: import("svelte").Snippet<[]> | undefined;
} & Record<string, any>, {}, "">;
type Props = {
    /**
     * - Where to show the dropdown
     * menu.
     */
    popupPosition?: import("../../typedefs").PopupPosition | undefined;
    /**
     * - Whether to show the backdrop for the popup.
     */
    showPopupBackdrop?: boolean | undefined;
    /**
     * - Chevron slot content.
     */
    chevronIcon?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Popup slot content.
     */
    popup?: import("svelte").Snippet<[]> | undefined;
};
