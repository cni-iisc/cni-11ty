export default OptionGroup;
type OptionGroup = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<Props & Record<string, any>>): void;
};
/**
 * A group within a `<Listbox>`. The equivalent of the HTML `<optgroup>` element. It can contain one
 * or more `<Option>`s.
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup
 * @see https://w3c.github.io/aria/#listbox
 * @see https://www.w3.org/WAI/ARIA/apg/patterns/listbox/examples/listbox-grouped/
 */
declare const OptionGroup: import("svelte").Component<{
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to hide the widget. An alias of the `aria-hidden`
     * attribute.
     */
    hidden?: boolean | undefined;
    /**
     * - Whether to disable the widget. An alias of the `aria-disabled`
     * attribute.
     */
    disabled?: boolean | undefined;
    /**
     * - The group’s label to be displayed above the child `<Option>`s.
     */
    label?: string | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
} & Record<string, any>, {}, "">;
type Props = {
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to hide the widget. An alias of the `aria-hidden`
     * attribute.
     */
    hidden?: boolean | undefined;
    /**
     * - Whether to disable the widget. An alias of the `aria-disabled`
     * attribute.
     */
    disabled?: boolean | undefined;
    /**
     * - The group’s label to be displayed above the child `<Option>`s.
     */
    label?: string | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
};
