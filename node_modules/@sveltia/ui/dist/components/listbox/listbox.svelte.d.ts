export default Listbox;
type Listbox = {
    $on?(type: string, callback: (e: any) => void): () => void;
    $set?(props: Partial<KeyboardEventHandlers & MouseEventHandlers & FocusEventHandlers & DragEventHandlers & Props & Record<string, any>>): void;
};
/**
 * A list widget with selectable options. The equivalent of the HTML `<select multiple>` element.
 * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select
 * @see https://w3c.github.io/aria/#listbox
 * @see https://www.w3.org/WAI/ARIA/apg/patterns/listbox/
 */
declare const Listbox: import("svelte").Component<import("../../typedefs").KeyboardEventHandlers & import("../../typedefs").MouseEventHandlers & import("../../typedefs").FocusEventHandlers & import("../../typedefs").DragEventHandlers & {
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to hide the widget. An alias of the `aria-hidden`
     * attribute.
     */
    hidden?: boolean | undefined;
    /**
     * - Whether to disable the widget. An alias of the `aria-disabled`
     * attribute.
     */
    disabled?: boolean | undefined;
    /**
     * - Whether to make the widget read-only. An alias of the
     * `aria-readonly` attribute.
     */
    readonly?: boolean | undefined;
    /**
     * - Whether to mark the widget required. An alias of the
     * `aria-required` attribute.
     */
    required?: boolean | undefined;
    /**
     * - Whether to mark the widget invalid. An alias of the
     * `aria-invalid` attribute.
     */
    invalid?: boolean | undefined;
    /**
     * - Whether to allow selecting more than one `<Option>`. An alias
     * of the `aria-multiselectable` attribute.
     */
    multiple?: boolean | undefined;
    /**
     * - Search terms to be used to filter the items.
     */
    searchTerms?: string | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Custom `Change` event handler.
     */
    onChange?: ((event: CustomEvent) => void) | undefined;
    /**
     * - Custom `Filter` event handler.
     */
    onFilter?: ((event: CustomEvent) => void) | undefined;
} & Record<string, any>, {}, "">;
type Props = {
    /**
     * - The `class` attribute on the wrapper element.
     */
    class?: string | undefined;
    /**
     * - Whether to hide the widget. An alias of the `aria-hidden`
     * attribute.
     */
    hidden?: boolean | undefined;
    /**
     * - Whether to disable the widget. An alias of the `aria-disabled`
     * attribute.
     */
    disabled?: boolean | undefined;
    /**
     * - Whether to make the widget read-only. An alias of the
     * `aria-readonly` attribute.
     */
    readonly?: boolean | undefined;
    /**
     * - Whether to mark the widget required. An alias of the
     * `aria-required` attribute.
     */
    required?: boolean | undefined;
    /**
     * - Whether to mark the widget invalid. An alias of the
     * `aria-invalid` attribute.
     */
    invalid?: boolean | undefined;
    /**
     * - Whether to allow selecting more than one `<Option>`. An alias
     * of the `aria-multiselectable` attribute.
     */
    multiple?: boolean | undefined;
    /**
     * - Search terms to be used to filter the items.
     */
    searchTerms?: string | undefined;
    /**
     * - Primary slot content.
     */
    children?: import("svelte").Snippet<[]> | undefined;
    /**
     * - Custom `Change` event handler.
     */
    onChange?: ((event: CustomEvent) => void) | undefined;
    /**
     * - Custom `Filter` event handler.
     */
    onFilter?: ((event: CustomEvent) => void) | undefined;
};
