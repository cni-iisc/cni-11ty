/**
 * Generate a random ID.
 * @returns {string} Generated 26-character string.
 */
export function generateRandomId(): string;
/**
 * Generate a v4 UUID or its shortened version.
 * @param {'short' | 'shorter' | number} [length] - Length.
 * @returns {string} UUID like `10f95178-c983-4cfe-91d6-4e62c8c7e582`.
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID
 */
export function generateUUID(length?: number | "short" | "shorter" | undefined): string;
/**
 * Get the SHA hash of the given file or text.
 * @param {File | Blob | string} input - File or text.
 * @param {object} [options] - Options.
 * @param {'SHA-1' | 'SHA-256' | 'SHA-512'} [options.algorithm] - Digest algorithm. Default: SHA-1.
 * @param {'hex' | 'binary'} [options.format] - Hash format. Default: hex.
 * @returns {Promise<string>} Hash.
 * @see https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest
 */
export function getHash(input: File | Blob | string, { algorithm, format }?: {
    algorithm?: "SHA-1" | "SHA-256" | "SHA-512" | undefined;
    format?: "hex" | "binary" | undefined;
} | undefined): Promise<string>;
/**
 * Regular expression that matches a UUID.
 */
export const uuidPattern: RegExp;
